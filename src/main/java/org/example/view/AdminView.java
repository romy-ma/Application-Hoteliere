/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view;

import org.example.model.DataBaseConnexion;
import org.example.model.Reservation;
import org.example.model.Room;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Map;

/**
 *
 * @author DELL
 */
public class AdminView extends javax.swing.JFrame {
    public ArrayList<ReservationPanel> reservationsPanelArray = new ArrayList<>();
    public ModifyRoomView modifyRoomView;
    public CreateRoomView createRoomView;
    public DeleteRoomView deleteRoomView;
    /**
     * Creates new form AdminView
     */
    public AdminView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomsSideBar = new javax.swing.JPanel();
        createRoomButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        modifyRoomButton = new javax.swing.JButton();
        deleteRoomButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        reservationsPanel = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
        for(Map.Entry<Integer,Reservation> entry : DataBaseConnexion.reservationMap.entrySet())
        {
            if(DataBaseConnexion.usersMap.get(entry.getValue().getUsername()).isReservationStatus() )
            {

            }
            else
            {
                ReservationPanel reservationPanel1 = new ReservationPanel();
                reservationPanel1.setReservationNumberField(String.valueOf(entry.getKey()));
                reservationPanel1.setRoomNumberField(String.valueOf(entry.getValue().getRoomToReserve()));
                reservationPanel1.setUserNameField(entry.getValue().getUsername());
                reservationPanel1.setBegiDateField(entry.getValue().getBeginDate().toString());
                reservationPanel1.setEndDateField(entry.getValue().getEndDate().toString());
                reservationsPanelArray.add(reservationPanel1);
                container.add(reservationPanel1);
            }
        }
        reservationsPanel.setViewportView(container);

        createRoomButton.setText("Create Room");

        jLabel1.setText("Chhose your Action:");

        modifyRoomButton.setText("Modify Room");

        deleteRoomButton.setText("Delete Room");

        logOutButton.setText("Logout");

        javax.swing.GroupLayout roomsSideBarLayout = new javax.swing.GroupLayout(roomsSideBar);
        roomsSideBar.setLayout(roomsSideBarLayout);
        roomsSideBarLayout.setHorizontalGroup(
            roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsSideBarLayout.createSequentialGroup()
                .addGroup(roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomsSideBarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roomsSideBarLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(createRoomButton))
                    .addGroup(roomsSideBarLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(modifyRoomButton))
                    .addGroup(roomsSideBarLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteRoomButton))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        roomsSideBarLayout.setVerticalGroup(
            roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsSideBarLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modifyRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(343, Short.MAX_VALUE))
        );

        reservationsPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roomsSideBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reservationsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roomsSideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reservationsPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    public void onClickedCreateRoomView(ActionListener actionListener)
    {
        createRoomButton.addActionListener(actionListener);
    }
    public void onClickedModifyRoomView(ActionListener actionListener)
    {
        modifyRoomButton.addActionListener(actionListener);
    }
    public void onClickedDeleteRoomView(ActionListener actionListener)
    {
        deleteRoomButton.addActionListener(actionListener);
    }
    public void onClickedAcceptButton(ActionListener listener,int i)
    {
        reservationsPanelArray.get(i).onClickedacceptButton(listener);
    }
    public void onClickedDeclineButton(ActionListener listener,int i)
    {
        reservationsPanelArray.get(i).onClickeddeclineButton(listener);
    }
    public void onClickedLogOutButton(ActionListener listener)
    {
        logOutButton.addActionListener(listener);
    }
    public void updateUI()
    {
        JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
        for(Map.Entry<Integer,Reservation> entry : DataBaseConnexion.reservationMap.entrySet())
        {
            if(DataBaseConnexion.usersMap.get(entry.getValue().getUsername()).isReservationStatus() || DataBaseConnexion.usersMap.get(entry.getValue().getUsername()).getReservationNumber() == 0)
            {

            }
            else
            {
                ReservationPanel reservationPanel1 = new ReservationPanel();
                reservationPanel1.setReservationNumberField(String.valueOf(entry.getKey()));
                reservationPanel1.setRoomNumberField(String.valueOf(entry.getValue().getRoomToReserve()));
                reservationPanel1.setUserNameField(entry.getValue().getUsername());
                reservationPanel1.setBegiDateField(entry.getValue().getBeginDate().toString());
                reservationPanel1.setEndDateField(entry.getValue().getEndDate().toString());
                reservationsPanelArray.add(reservationPanel1);
                container.add(reservationPanel1);
                container.revalidate();
                container.repaint();

            }
        }
        reservationsPanel.setViewportView(container);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createRoomButton;
    private javax.swing.JButton deleteRoomButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton modifyRoomButton;
    private javax.swing.JScrollPane reservationsPanel;
    private javax.swing.JPanel roomsSideBar;
    // End of variables declaration//GEN-END:variables
}
