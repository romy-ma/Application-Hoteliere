/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view;

import org.example.model.DataBaseConnexion;
import org.example.model.Room;
import org.example.view.CreateRoomView;
import org.example.view.DeleteRoomView;
import org.example.view.ModifyRoomView;
import org.example.view.RoomPanel;

import javax.swing.*;
import javax.tools.Tool;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Map;

/**
 *
 * @author DELL
 */
public class ClientView extends JFrame {

   public ArrayList<RoomPanel> roomPanels = new ArrayList<>();
   Toolkit toolkit = Toolkit.getDefaultToolkit();
   Image image = toolkit.getImage("src/main/java/org/example/view/pngegg_2.png");
   Image image2 = toolkit.getImage("src/main/java/org/example/view/pngegg_3.png");
//   new javax.swing.JPanel()
//    {
//        @Override
//        protected void paintComponent(Graphics g) {
//        super.paintComponent(g);
//        Graphics2D g2d = (Graphics2D) g;
//
//        // Define the gradient colors
//        Color startColor = new Color(175, 69, 69);
//        Color endColor = new Color(75, 19, 79);
//
//        int width = getWidth();
//        int height = getHeight();
//        GradientPaint gradientPaint = new GradientPaint(0, 0, startColor, width, height, endColor);
//
//        g2d.setPaint(gradientPaint);
//        g2d.fillRect(0, 0, width, height);
//    }
//    };
    public ClientView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomsSideBar = new javax.swing.JPanel()
    {
        @Override
        protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;

        // Define the gradient colors
        Color startColor = new Color(175, 69, 69);
        Color endColor = new Color(75, 19, 79);

        int width = getWidth();
        int height = getHeight();
        GradientPaint gradientPaint = new GradientPaint(0, 0, startColor, width, height, endColor);

        g2d.setPaint(gradientPaint);
        g2d.fillRect(0, 0, width, height);
    }
    };
        viewReservationButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        userNameField = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        reservationsPanel = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));

        for(Map.Entry<Integer, Room> entry : DataBaseConnexion.roomsMap.entrySet()) {
        if(!entry.getValue().isReserved())
        {
            RoomPanel roomPanel = new RoomPanel();
            roomPanel.addRoomNumber(entry.getValue().getRoomnumber());
            roomPanel.addRoomType(entry.getValue().getRoomtype());
            roomPanel.addRoomPrice(entry.getValue().getRoomprice());
            container.add(roomPanel);
            roomPanels.add(roomPanel);
        }
    }
        reservationsPanel.setViewportView(container);


        viewReservationButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewReservationButton.setText("View Reservation");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Chose your Action:");

        logOutButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        logOutButton.setText("Logout");

        jLabel2.setIcon(new javax.swing.ImageIcon(image)); // NOI18N

        userNameField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        userNameField.setText("jLabel3");

        jLabel3.setIcon(new javax.swing.ImageIcon(image2)); // NOI18N
        jLabel3.setText("jLabel3");

        reservationsPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        javax.swing.GroupLayout roomsSideBarLayout = new javax.swing.GroupLayout(roomsSideBar);
        roomsSideBar.setLayout(roomsSideBarLayout);
        roomsSideBarLayout.setHorizontalGroup(
            roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsSideBarLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomsSideBarLayout.createSequentialGroup()
                        .addGroup(roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(roomsSideBarLayout.createSequentialGroup()
                                    .addGap(48, 48, 48)
                                    .addComponent(viewReservationButton))
                                .addGroup(roomsSideBarLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roomsSideBarLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)))
                        .addGap(14, 14, 14))
                    .addGroup(roomsSideBarLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(reservationsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE))
        );
        roomsSideBarLayout.setVerticalGroup(
            roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsSideBarLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(roomsSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(userNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(168, 168, 168)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(viewReservationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomsSideBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reservationsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roomsSideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roomsSideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        setVisible(true);
        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void updateUI()
    {
        JPanel container = new JPanel();
        container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
        for(Map.Entry<Integer, Room> entry : DataBaseConnexion.roomsMap.entrySet()) {
            if(!entry.getValue().isReserved())
            {
                RoomPanel roomPanel = new RoomPanel();
                roomPanel.addRoomNumber(entry.getValue().getRoomnumber());
                roomPanel.addRoomType(entry.getValue().getRoomtype());
                roomPanel.addRoomPrice(entry.getValue().getRoomprice());
                container.add(roomPanel);
                roomPanels.add(roomPanel);
                container.revalidate();
                container.repaint();
            }
        }
        reservationsPanel.setViewportView(container);
    }



    public void onClickedReservationButtonListener(ActionListener listener,int i){roomPanels.get(i).OnClickedReserveButton(listener);}
    public void onClickedViewReservationButton(ActionListener listener){viewReservationButton.addActionListener(listener);}
    public void onClickedLogOutButton(ActionListener listener){logOutButton.addActionListener(listener);}
    public void setUserNameField(String userName){userNameField.setText(userName);}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton logOutButton;
    private javax.swing.JScrollPane reservationsPanel;
    private javax.swing.JPanel roomsSideBar;
    private javax.swing.JLabel userNameField;
    private javax.swing.JButton viewReservationButton;
    // End of variables declaration//GEN-END:variables

    //to put after reusing netbeans
//    JPanel container = new JPanel();
//        container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
//
//        for(Map.Entry<Integer, Room> entry : DataBaseConnexion.roomsMap.entrySet()) {
//        if(!entry.getValue().isReserved())
//        {
//            RoomPanel roomPanel = new RoomPanel();
//            roomPanel.addRoomNumber(entry.getValue().getRoomnumber());
//            roomPanel.addRoomType(entry.getValue().getRoomtype());
//            roomPanel.addRoomPrice(entry.getValue().getRoomprice());
//            container.add(roomPanel);
//            roomPanels.add(roomPanel);
//        }
//    }
//        reservationsPanel.setViewportView(container);

}
